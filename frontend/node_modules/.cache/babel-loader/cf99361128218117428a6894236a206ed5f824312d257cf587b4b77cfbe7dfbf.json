{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mich1\\\\speech-reconition-app\\\\frontend\\\\src\\\\components\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Spinner from './Spinner';\nimport { Typewriter } from 'react-simple-typewriter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [transcription, setTranscription] = useState('');\n  const [editableTranscription, setEditableTranscription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData);\n      setTranscription(response.data.transcription);\n      setEditableTranscription(response.data.transcription);\n    } catch (error) {\n      alert('Error uploading file');\n    }\n    setLoading(false);\n  };\n  const handleDownload = () => {\n    const blob = new Blob([editableTranscription], {\n      type: 'text/plain'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'transcription.txt';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload an Audio File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 rounded bg-light mb-3 text-center shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: e => setFile(e.target.files[0]),\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Selected file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \", file.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          className: \"mt-2\",\n          src: URL.createObjectURL(file)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mb-3\",\n      onClick: handleUpload,\n      children: \"Transcribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Transcription:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontFamily: 'monospace',\n          whiteSpace: 'pre-line'\n        },\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Typewriter, {\n          words: [transcription],\n          loop: 1,\n          cursor: true,\n          cursorStyle: \"|\",\n          typeSpeed: 30,\n          deleteSpeed: 50,\n          delaySpeed: 1000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control my-2\",\n        rows: 6,\n        value: editableTranscription,\n        onChange: e => setEditableTranscription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary me-2\",\n        onClick: () => navigator.clipboard.writeText(editableTranscription),\n        children: \"\\uD83D\\uDCCB Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        onClick: handleDownload,\n        children: \"\\u2B07 Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"spLICj28hRXLgSqYZjgzBX/0a4s=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","Spinner","Typewriter","jsxDEV","_jsxDEV","Upload","_s","file","setFile","transcription","setTranscription","editableTranscription","setEditableTranscription","loading","setLoading","handleUpload","formData","FormData","append","response","post","data","error","alert","handleDownload","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","e","target","files","name","controls","src","onClick","style","fontFamily","whiteSpace","words","loop","cursor","cursorStyle","typeSpeed","deleteSpeed","delaySpeed","rows","value","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["C:/Users/mich1/speech-reconition-app/frontend/src/components/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from './Spinner';\r\nimport { Typewriter } from 'react-simple-typewriter';\r\n\r\nconst Upload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [transcription, setTranscription] = useState('');\r\n  const [editableTranscription, setEditableTranscription] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/upload', formData);\r\n      setTranscription(response.data.transcription);\r\n      setEditableTranscription(response.data.transcription);\r\n    } catch (error) {\r\n      alert('Error uploading file');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const blob = new Blob([editableTranscription], { type: 'text/plain' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'transcription.txt';\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h3>Upload an Audio File</h3>\r\n\r\n      {/* Drag & drop styled box */}\r\n      <div className=\"border p-4 rounded bg-light mb-3 text-center shadow-sm\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\"audio/*\"\r\n          onChange={e => setFile(e.target.files[0])}\r\n          className=\"form-control\"\r\n        />\r\n        {file && (\r\n          <div className=\"mt-3\">\r\n            <strong>Selected file:</strong> {file.name}\r\n            <br />\r\n            <audio controls className=\"mt-2\" src={URL.createObjectURL(file)} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"btn btn-success mb-3\" onClick={handleUpload}>Transcribe</button>\r\n\r\n      {loading && <Spinner />}\r\n\r\n      {transcription && (\r\n        <div className=\"mt-4\">\r\n          <h5>Transcription:</h5>\r\n          <div style={{ fontFamily: 'monospace', whiteSpace: 'pre-line' }} className=\"mb-3\">\r\n            <Typewriter\r\n              words={[transcription]}\r\n              loop={1}\r\n              cursor\r\n              cursorStyle=\"|\"\r\n              typeSpeed={30}\r\n              deleteSpeed={50}\r\n              delaySpeed={1000}\r\n            />\r\n          </div>\r\n\r\n          <textarea\r\n            className=\"form-control my-2\"\r\n            rows={6}\r\n            value={editableTranscription}\r\n            onChange={e => setEditableTranscription(e.target.value)}\r\n          />\r\n\r\n          <button\r\n            className=\"btn btn-outline-primary me-2\"\r\n            onClick={() => navigator.clipboard.writeText(editableTranscription)}\r\n          >\r\n            ðŸ“‹ Copy\r\n          </button>\r\n\r\n          <button className=\"btn btn-outline-secondary\" onClick={handleDownload}>\r\n            â¬‡ Download\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}